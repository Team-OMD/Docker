version: "3"

services:
  backend:
    platform: linux/amd64
    container_name: server
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    networks:
      - omd
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      CLOUD_AWS_CREDENTIALS_ACCESS_KEY: ${S3_ACCESS_KEY} # AWS Access Key
      CLOUD_AWS_CREDENTIALS_SECRET_KEY: ${S3_SECRET_KEY} # AWS Secret Key
      CLOUD_AWS_REGION_STATIC: ap-northeast-2
      CLOUD_AWS_S3_BUCKET: onmydesk
      naver.api.client.id: ${NAVER_API_CLIENT_ID}
      naver.api.client.secret: ${NAVER_API_CLIENT_SECRET}

  nginx:
    platform: linux/amd64
    image: nginx:latest
    restart: unless-stopped
    build:
      context: ./Nginx
    ports:
      - "80:80"
      - "433:433"
    volumes:
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    networks:
      - omd

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf/:/etc/letsencrypt
      - ./certbot/logs/:/var/log/letsencrypt
      - ./certbot/data:/usr/share/nginx/html/letsencrypt
    restart: unless-stopped

  frontend:
    platform: linux/amd64
    container_name: web
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    restart: always
    networks:
      - omd

networks:
  omd:
    driver: bridge
